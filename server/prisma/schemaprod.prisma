// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Dog {
  id           Int          @id @default(autoincrement())
  name         String
  nickname     String?
  birthdayDate DateTime?
  gender       String?
  colour       String?
  breed        String
  avatarUrl    String?
  daysDog      Attendance[]
  vaccines     Vaccine[]
  Owner        Owner        @relation(fields: [ownerId], references: [id])
  ownerId      Int

  @@map("dogs")
}

model Owner {
  id           Int       @id @default(autoincrement())
  name         String
  phoneOne     String
  phoneTwo     String?
  emailAddress String    @unique
  address      String?
  dogs         Dog[]
  extracts     Extract[]

  @@map("owners")
}

model Vaccine {
  id          Int      @id @default(autoincrement())
  dateVaccine DateTime
  type        String
  dogId       Int
  dog         Dog      @relation(fields: [dogId], references: [id], onDelete: Cascade)

  @@map("vaccines")
}

model Day {
  id      Int          @id @default(autoincrement())
  date    DateTime
  dayDogs Attendance[]

  @@unique([date])
  @@map("days")
}

model Attendance {
  id         Int     @id @default(autoincrement())
  fullDay    Boolean
  paid       Boolean
  day_id     Int
  dog_id     Int
  extract_id Int?

  day     Day      @relation(fields: [day_id], references: [id])
  dog     Dog      @relation(fields: [dog_id], references: [id], onDelete: Cascade)
  extract Extract?

  @@map("attendances")
}

model Extract {
  id          Int       @id @default(autoincrement())
  value       Decimal
  description String?
  date        DateTime?

  attendanceId Int?        @unique
  ownerId      Int
  attendance   Attendance? @relation(fields: [attendanceId], references: [id], onDelete: Cascade)
  Owner        Owner       @relation(fields: [ownerId], references: [id])

  @@map("extracts")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  name     String?
  password String
  salt     String

  @@map("users")
}
